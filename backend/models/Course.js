const pool = require('../config/db');

// üîπ –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–∞
async function createCourse({ title, description, details, price, duration, coverUrl, category, authorId, is_published }) {
  const query = `
    INSERT INTO courses (title, description, details, price, duration, cover_url, category, author_id, is_published)
    VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
    RETURNING *
  `;
  const values = [title, description, details, price, duration, coverUrl, category, authorId, is_published];
  const { rows } = await pool.query(query, values);
  return rows[0];
}

// üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–æ–≤
async function getPublishedCourses() {
  const query = `SELECT * FROM courses WHERE is_published = true ORDER BY created_at DESC`;
  const { rows } = await pool.query(query);
  return rows;
}

// üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–æ–≤
async function getUnpublishedCourses() {
  const query = `SELECT * FROM courses WHERE is_published = false ORDER BY created_at DESC`;
  const { rows } = await pool.query(query);
  return rows;
}

// üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –ø–æ ID
async function getCourseById(courseId) {
  const query = `SELECT * FROM courses WHERE id = $1`;
  const { rows } = await pool.query(query, [courseId]);
  return rows[0];
}

// üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
async function getCoursesByAuthor(authorId) {
  const query = `SELECT * FROM courses WHERE author_id = $1 ORDER BY created_at DESC`;
  const { rows } = await pool.query(query, [authorId]);
  return rows;
}

// üîπ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è –∫ –∫—É—Ä—Å—É
async function addModule({ courseId, title, description, position }) {
  const query = `
    INSERT INTO modules (course_id, title, description, position)
    VALUES ($1, $2, $3, $4)
    RETURNING *
  `;
  const values = [courseId, title, description, position];
  const { rows } = await pool.query(query, values);
  return rows[0];
}

// üîπ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—Ä–æ–∫–∞ –∫ –º–æ–¥—É–ª—é
async function addLesson({ moduleId, title, description, type, contentUrl, position }) {
  const query = `
    INSERT INTO lessons (module_id, title, description, type, content_url, position)
    VALUES ($1, $2, $3, $4, $5, $6)
    RETURNING *
  `;
  const values = [moduleId, title, description, type, contentUrl, position];
  const { rows } = await pool.query(query, values);
  return rows[0];
}

module.exports = {
  createCourse,
  getPublishedCourses,
  getUnpublishedCourses,
  getCourseById,
  getCoursesByAuthor,
  addModule,
  addLesson
};
