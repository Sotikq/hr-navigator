const axios = require('axios').default;

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤
const API_BASE = 'https://server.hrnavigator.kz/api';
const ADMIN_TOKEN = 'your-admin-jwt-token-here'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∞

async function testEmailAPI() {
  console.log('üß™ Testing Email API Endpoints...\n');

  // Test 1: Password Reset Request
  console.log('üìß Test 1: Password Reset Request');
  try {
    const response = await axios.post(`${API_BASE}/email/password-reset`, {
      email: 'test@example.com'
    });
    console.log('‚úÖ Password reset request:', response.data.message);
  } catch (err) {
    console.log('‚ùå Password reset failed:', err.response?.data?.message || err.message);
  }

  // Test 2: Email Queue Status (—Ç—Ä–µ–±—É–µ—Ç admin token)
  console.log('\nüìä Test 2: Email Queue Status');
  try {
    const response = await axios.get(`${API_BASE}/email/queue-status`, {
      headers: { Authorization: `Bearer ${ADMIN_TOKEN}` }
    });
    console.log('‚úÖ Queue status:', response.data);
  } catch (err) {
    console.log('‚ùå Queue status failed:', err.response?.data?.message || err.message);
  }

  // Test 3: Test Email (—Ç—Ä–µ–±—É–µ—Ç admin token)
  console.log('\nüìß Test 3: Test Email');
  try {
    const response = await axios.post(`${API_BASE}/email/test`, {
      to: 'test@example.com',
      subject: 'API Test Email',
      message: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ API'
    }, {
      headers: { Authorization: `Bearer ${ADMIN_TOKEN}` }
    });
    console.log('‚úÖ Test email sent:', response.data.message);
  } catch (err) {
    console.log('‚ùå Test email failed:', err.response?.data?.message || err.message);
  }

  // Test 4: Bulk Email (—Ç—Ä–µ–±—É–µ—Ç admin token)
  console.log('\nüìÆ Test 4: Bulk Email');
  try {
    const response = await axios.post(`${API_BASE}/email/bulk-send`, {
      subject: '–¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —á–µ—Ä–µ–∑ API',
      content: '<h2>–ù–æ–≤–æ—Å—Ç–∏ HR Navigator</h2><p>–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —á–µ—Ä–µ–∑ API.</p>',
      type: 'newsletter'
      // userIds –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ–º - –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –≤—Å–µ–º –∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    }, {
      headers: { Authorization: `Bearer ${ADMIN_TOKEN}` }
    });
    console.log('‚úÖ Bulk email sent:', response.data);
  } catch (err) {
    console.log('‚ùå Bulk email failed:', err.response?.data?.message || err.message);
  }

  console.log('\nüéâ Email API Testing Complete!');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
if (require.main === module) {
  console.log('‚ö†Ô∏è  Make sure to update ADMIN_TOKEN before running tests');
  console.log('‚ö†Ô∏è  Make sure your server is running on', API_BASE);
  console.log('');
  testEmailAPI().catch(console.error);
}

module.exports = testEmailAPI; 